[net]
# Testing
#batch=1
#subdivisions=1
# Training
batch=64
subdivisions=16
width=416
height=416
channels=3
momentum=0.949
decay=0.0005
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.001
burn_in=1000
max_batches = 6000
policy=steps
steps=4800,5400
scales=.1,.1

#cutmix=1
mosaic=1

#:104x104 54:52x52 85:26x26 104:13x13 for 416

# Downsample

#:0
[convolutional]
batch_normalize=1
filters=32
size=3
stride=2
pad=1
activation=mish

#:1
[convolutional]
batch_normalize=1
filters=16
size=1
stride=1
pad=1
activation=mish

#:2
[route]
layers = -2

#:3
[convolutional]
batch_normalize=1
filters=16
size=1
stride=1
pad=1
activation=mish

#:4
[convolutional]
batch_normalize=1
filters=16
groups=16
size=3
stride=1
pad=1
activation=mish

#:5
[convolutional]
batch_normalize=1
filters=16
size=1
stride=1
pad=1
activation=mish

#:6
[shortcut]
from=-3
activation=linear

#:7
[route]
layers = -1,-6

# Downsample

#:8
[convolutional]
batch_normalize=1
filters=64
size=3
stride=2
pad=1
activation=mish

#:9
[convolutional]
batch_normalize=1
filters=32
size=1
stride=1
pad=1
activation=mish

#:10
[route]
layers = -2

#:11
[convolutional]
batch_normalize=1
filters=32
size=1
stride=1
pad=1
activation=mish

#:12
[convolutional]
batch_normalize=1
filters=32
groups=32
size=3
stride=1
pad=1
activation=mish

#:13
[convolutional]
batch_normalize=1
filters=32
size=1
stride=1
pad=1
activation=mish

#:14
[shortcut]
from=-3
activation=linear

#:15
[route]
layers = -1,-6

# Downsample

#:16
[convolutional]
batch_normalize=1
filters=128
size=3
stride=2
pad=1
activation=mish

#:17
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=mish

#:18
[route]
layers = -2

#:19
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=mish

#:20
[convolutional]
batch_normalize=1
filters=64
groups=64
size=3
stride=1
pad=1
activation=mish

#:21
[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=mish

#:22
[shortcut]
from=-3
activation=linear

#:23
[route]
layers = -1,-6

# Downsample

#:24
[convolutional]
batch_normalize=1
filters=256
size=3
stride=2
pad=1
activation=mish

#:25
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=mish

#:26
[route]
layers = -2

#:27
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=mish

#28
[convolutional]
batch_normalize=1
filters=128
groups=128
size=3
stride=1
pad=1
activation=mish

#29
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=mish

#30
[shortcut]
from=-3
activation=linear

#31
[route]
layers = -1,-6

# Downsample

#:32
[convolutional]
batch_normalize=1
filters=512
size=3
stride=2
pad=1
activation=mish

#:33
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=mish

#:34
[route]
layers = -2

#:35
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=mish

#:36
[convolutional]
batch_normalize=1
filters=256
groups=256
size=3
stride=1
pad=1
activation=mish

#:37
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=mish

#:38
[shortcut]
from=-3
activation=linear

#:39
[route]
layers = -1,-6


##########################
#:40
[convolutional]
batch_normalize=1
filters=512
groups=512
size=3
stride=1
pad=1
activation=leaky

### SPP ###
#:41
[maxpool]
stride=1
size=5

#:42
[route]
layers=-2

#:43
[maxpool]
stride=1
size=9

#:44
[route]
layers=-4

#:45
[maxpool]
stride=1
size=13

#:46
[route]
layers=-1,-3,-5,-6
### End SPP ###

#:47
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

#:48
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
groups=512
activation=leaky

############################加CBAM

####添加内容开始#####

#1:49
[convolutional]
batch_normalize=1
filters=256###########128,64
size=1
stride=1
pad=1
activation=leaky

####先对RES模块增加做准备，通道数一般往小设计，后续还要通过route层做containation###
#2:50
[route]
layers = -2

#3:51
[convolutional]
batch_normalize=1
filters=256###########128,64
size=1
stride=1
pad=1
activation=leaky

#4:52
[convolutional]
batch_normalize=1
filters=256###########128,64
groups=256
size=3
stride=1
pad=1
activation=leaky

#5:53
[convolutional]
batch_normalize=1
filters=256###########128,64
size=1
stride=1
pad=1
activation=leaky

###CBAM开始###
###CAM开始###
####通道方向Global avgpooling####
#6:54
[avgpool]
channelpool = 0

#####MLP########
#7:55
[convolutional]
batch_normalize=1
filters=16###########8,4
size=1
stride=1
pad=1
activation=linear

#8:56
[convolutional]
batch_normalize=1
filters=256###########128,64
size=1
stride=1
pad=1
activation=linear

####通道方向Global maxpooling##
#9:57
[route]
layers = -4

#10:58
[maxpool]
size=13########################注意修改13,26,52
stride=13########################注意修改13,26,52
padding=0

#####MLP########
#11:59
[convolutional]
batch_normalize=1
filters=16###########8,4
size=1
stride=1
pad=1
activation=linear

#12:60
[convolutional]
batch_normalize=1
filters=256###########128,64
size=1
stride=1
pad=1
activation=linear

#####两个池化层输出相加#####
#13:61
[shortcut]
from=-5
activation=logistic

#14:62
[scale_channels]
from = -9
#scale_wh = 1
activation= linear

####CAM结束###
####SAM开始###
#15:63
[maxpool]
size = 1
stride = 1
maxpool_depth = 1
out_channels = 1

#16:64
[convolutional]
batch_normalize=1
filters=256###########128,64
size=7
stride=1
pad=1
activation=logistic 

#17:65
[sam]
from = -3#############################avgpool修改,注意修改
activation= linear
####SAM结束###
####CBAM结束####

#18:66
[shortcut]
from=-15
activation=linear
#####RES结束######

#19:67
[convolutional]
batch_normalize=1
filters=256###########128,64
size=1
stride=1
pad=1
activation=leaky

#20:68
[route]
layers = -1,-19

#####添加内容结束######

#:69
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

#:70
[upsample]
stride=2

#:71
[route]
layers = 31


############################加CBAM

####添加内容开始#####

#1:72
[convolutional]
batch_normalize=1
filters=128###########128,64
size=1
stride=1
pad=1
activation=leaky

####先对RES模块增加做准备，通道数一般往小设计，后续还要通过route层做containation###
#2:73
[route]
layers = -2

#3:74
[convolutional]
batch_normalize=1
filters=128###########128,64
size=1
stride=1
pad=1
activation=leaky

#####RES开始####
#4:75
[convolutional]
batch_normalize=1
filters=128###########128,64
groups=128
size=3
stride=1
pad=1
activation=leaky

#5:76
[convolutional]
batch_normalize=1
filters=128###########128,64
size=1
stride=1
pad=1
activation=leaky

###CBAM开始###
###CAM开始###
####通道方向Global avgpooling####
#6:77
[avgpool]
channelpool = 0

#####MLP########
#7:78
[convolutional]
batch_normalize=1
filters=8###########8,4
size=1
stride=1
pad=1
activation=linear

#8:79
[convolutional]
batch_normalize=1
filters=128###########128,64
size=1
stride=1
pad=1
activation=linear
####通道方向Global maxpooling##
#9:80
[route]
layers = -4

#10:81
[maxpool]
size=26########################注意修改13,26,52
stride=26########################注意修改13,26,52
padding=0

#####MLP########
#11:82
[convolutional]
batch_normalize=1
filters=8###########8,4
size=1
stride=1
pad=1
activation=linear

#12:83
[convolutional]
batch_normalize=1
filters=128###########128,64
size=1
stride=1
pad=1
activation=linear
#####两个池化层输出相加#####
#13:84
[shortcut]
from=-5
activation=logistic

#14:85
[scale_channels]
from = -9
#scale_wh = 1
activation= linear

####CAM结束###
####SAM开始###
#15:86
[maxpool]
size = 1
stride = 1
maxpool_depth = 1
out_channels = 1

#16:87
[convolutional]
batch_normalize=1
filters=128###########128,64
size=7
stride=1
pad=1
activation=logistic 

#17:88
[sam]
from = -3#############################avgpool修改,注意修改
activation= linear
####SAM结束###
####CBAM结束####

#18:89
[shortcut]
from=-15
activation=linear
#####RES结束######

#19:90
[convolutional]
batch_normalize=1
filters=128###########128,64
size=1
stride=1
pad=1
activation=leaky

#20:91
[route]
layers = -1,-19

#####添加内容结束######

#:92
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

#:93
[route]
layers = -1, -23

#:94
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

#:95
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
groups=256
activation=leaky

#:96
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

#:97
[upsample]
stride=2

#:98
[route]
layers = 23


############################加CBAM

####添加内容开始#####

#1:99
[convolutional]
batch_normalize=1
filters=64###########128,64
size=1
stride=1
pad=1
activation=leaky

####先对RES模块增加做准备，通道数一般往小设计，后续还要通过route层做containation###
#2:100
[route]
layers = -2

#3:101
[convolutional]
batch_normalize=1
filters=64###########128,64
size=1
stride=1
pad=1
activation=leaky

#####RES开始####
#4:102
[convolutional]
batch_normalize=1
filters=64###########128,64
groups=64
size=3
stride=1
pad=1
activation=leaky

#5:103
[convolutional]
batch_normalize=1
filters=64###########128,64
size=1
stride=1
pad=1
activation=leaky

###CBAM开始###
###CAM开始###
####通道方向Global avgpooling####
#6:104
[avgpool]
channelpool = 0

#####MLP########
#7:105
[convolutional]
batch_normalize=1
filters=4###########8,4
size=1
stride=1
pad=1
activation=linear

#8:106
[convolutional]
batch_normalize=1
filters=64###########128,64
size=1
stride=1
pad=1
activation=linear

####通道方向Global maxpooling##
#9:107
[route]
layers = -4

#10:108
[maxpool]
size=52########################注意修改13,26,52
stride=52########################注意修改13,26,52
padding=0

#####MLP########
#11:109
[convolutional]
batch_normalize=1
filters=4###########8,4
size=1
stride=1
pad=1
activation=linear

#12:110
[convolutional]
batch_normalize=1
filters=64###########128,64
size=1
stride=1
pad=1
activation=linear

#####两个池化层输出相加#####
#13:111
[shortcut]
from=-5
activation=logistic

#14:112
[scale_channels]
from = -9
#scale_wh = 1
activation= linear

####CAM结束###
####SAM开始###
#15:113
[maxpool]
size = 1
stride = 1
maxpool_depth = 1
out_channels = 1

#16:114
[convolutional]
batch_normalize=1
filters=64###########128,64
size=7
stride=1
pad=1
activation=logistic 

#17:115
[sam]
from = -3#############################avgpool修改,注意修改
activation= linear
####SAM结束###
####CBAM结束####

#18:116
[shortcut]
from=-15
activation=linear
#####RES结束######
#19:117
[convolutional]
batch_normalize=1
filters=64###########128,64
size=1
stride=1
pad=1
activation=leaky

#20:118
[route]
layers = -1,-19

#####添加内容结束######
#:119
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

#:120
[route]
layers = -1, -23

#:121
[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

#:122
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=128
groups=128
activation=leaky

##########################

#:123
[convolutional]
size=1
stride=1
pad=1
filters=24
activation=linear


#:124
[yolo]
mask = 0,1,2
anchors = 25, 25,  67, 41,  36, 78,  71,103, 129, 71,  97,177, 181,134, 210,270, 330,294
classes=3
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
scale_x_y = 1.2
iou_thresh=0.213
cls_normalizer=1.0
iou_normalizer=0.07
iou_loss=iou
nms_kind=greedynms
beta_nms=0.6
max_delta=5


#:125
[route]
layers = -3

#:126
[convolutional]
batch_normalize=1
size=3
stride=2
pad=1
filters=256
activation=leaky

#:127
[route]
layers = -1, 95

#:128
[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

#:129
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=256
groups=256
activation=leaky

#:130
[convolutional]
size=1
stride=1
pad=1
filters=24
activation=linear


#:131
[yolo]
mask = 3,4,5
anchors = 25, 25,  67, 41,  36, 78,  71,103, 129, 71,  97,177, 181,134, 210,270, 330,294
classes=3
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
scale_x_y = 1.1
iou_thresh=0.213
cls_normalizer=1.0
iou_normalizer=0.07
iou_loss=iou
nms_kind=greedynms
beta_nms=0.6
max_delta=5


#:132
[route]
layers = -3

#:133
[convolutional]
batch_normalize=1
size=3
stride=2
pad=1
filters=512
activation=leaky

#:134
[route]
layers = -1, 68

#:135
[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

#:136
[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=512
groups=512
activation=leaky

#:137
[convolutional]
size=1
stride=1
pad=1
filters=24
activation=linear


#:138
[yolo]
mask = 6,7,8
anchors = 25, 25,  67, 41,  36, 78,  71,103, 129, 71,  97,177, 181,134, 210,270, 330,294
classes=3
num=9
jitter=.3
ignore_thresh = .7
truth_thresh = 1
random=1
scale_x_y = 1.05
iou_thresh=0.213
cls_normalizer=1.0
iou_normalizer=0.07
iou_loss=iou
nms_kind=greedynms
beta_nms=0.6
max_delta=5

